// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationCinema.Data;

#nullable disable

namespace ReservationCinema.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250111132714_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ReservationCinema.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("ReservationCinema.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Annee")
                        .HasColumnType("date");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("ReservationCinema.Models.Horaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("HeureFin")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Horaires");
                });

            modelBuilder.Entity("ReservationCinema.Models.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateConstr")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Salles");
                });

            modelBuilder.Entity("ReservationCinema.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("HoraireId")
                        .HasColumnType("int");

                    b.Property<int>("SalleId")
                        .HasColumnType("int");

                    b.Property<float>("Tarif")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("HoraireId");

                    b.HasIndex("SalleId");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("ReservationCinema.Models.Salle", b =>
                {
                    b.HasOne("ReservationCinema.Models.Cinema", "Cinema")
                        .WithMany("Salles")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("ReservationCinema.Models.Seance", b =>
                {
                    b.HasOne("ReservationCinema.Models.Film", "Film")
                        .WithMany("Seances")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationCinema.Models.Horaire", "Horaire")
                        .WithMany("Seances")
                        .HasForeignKey("HoraireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationCinema.Models.Salle", "Salle")
                        .WithMany("Seances")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Horaire");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("ReservationCinema.Models.Cinema", b =>
                {
                    b.Navigation("Salles");
                });

            modelBuilder.Entity("ReservationCinema.Models.Film", b =>
                {
                    b.Navigation("Seances");
                });

            modelBuilder.Entity("ReservationCinema.Models.Horaire", b =>
                {
                    b.Navigation("Seances");
                });

            modelBuilder.Entity("ReservationCinema.Models.Salle", b =>
                {
                    b.Navigation("Seances");
                });
#pragma warning restore 612, 618
        }
    }
}
